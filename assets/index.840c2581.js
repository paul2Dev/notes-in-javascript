(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const o of document.querySelectorAll('link[rel="modulepreload"]'))t(o);new MutationObserver(o=>{for(const i of o)if(i.type==="childList")for(const n of i.addedNodes)n.tagName==="LINK"&&n.rel==="modulepreload"&&t(n)}).observe(document,{childList:!0,subtree:!0});function s(o){const i={};return o.integrity&&(i.integrity=o.integrity),o.referrerpolicy&&(i.referrerPolicy=o.referrerpolicy),o.crossorigin==="use-credentials"?i.credentials="include":o.crossorigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function t(o){if(o.ep)return;o.ep=!0;const i=s(o);fetch(o.href,i)}})();class _{constructor(e,{onNoteSelect:s,onNoteAdd:t,onNoteEdit:o,onNoteDelete:i}={}){this.root=e,this.onNoteSelect=s,this.onNoteAdd=t,this.onNoteEdit=o,this.onNoteDelete=i,this.root.innerHTML=`
            <div class="notes__sidebar">
                <button class="notes__add">Add Note</button>
                <div class="notes__list"></div>
            </div>

            <div class="notes__preview">
                <input type="text" class="notes__title" placeholder="Note title...">
                <textarea class="notes__body">Note content...</textarea>
            </div>
        `;const n=this.root.querySelector(".notes__add"),d=this.root.querySelector(".notes__title"),c=this.root.querySelector(".notes__body");n.addEventListener("click",()=>{this.onNoteAdd()}),[d,c].forEach(a=>{a.addEventListener("blur",()=>{const u=d.value.trim(),h=c.value.trim();this.onNoteEdit(u,h)})}),this.updateNotePreviewVisibility(!1)}_createListItemHTML(e,s,t,o){return`
            <div class="notes__list-item" data-note-id="${e}">
                <div class="note__small-title">${s}</div>
                <div class="note__small-body">
                    ${t.substring(0,60)}
                    ${t.length>60?"...":""}
                </div>
                <div class="note__small-updated">${o.toLocaleString(void 0,{dateStyle:"full",timeStyle:"short"})}</div>
            </div>
        `}updateNoteList(e){const s=this.root.querySelector(".notes__list");s.innerHTML="";for(let t of e){const o=this._createListItemHTML(t.id,t.title,t.body,new Date(t.updated));s.insertAdjacentHTML("beforeend",o)}s.querySelectorAll(".notes__list-item").forEach(t=>{t.addEventListener("click",()=>{this.onNoteSelect(t.dataset.noteId)}),t.addEventListener("dblclick",o=>{confirm("Are you sure you want to delete this note?")&&this.onNoteDelete(t.dataset.noteId)})})}updateSelectedNote(e){this.root.querySelector(".notes__title").value=e.title,this.root.querySelector(".notes__body").value=e.body,this.root.querySelectorAll(".notes__list-item").forEach(s=>{s.classList.remove("notes__list-item--selected")}),this.root.querySelector(`.notes__list-item[data-note-id="${e.id}"]`).classList.add("notes__list-item--selected")}updateNotePreviewVisibility(e){this.root.querySelector(".notes__preview").style.display=e?"block":"none"}}class l{static getAllNotes(){return JSON.parse(localStorage.getItem("notesapp-notes")||"[]").sort((s,t)=>new Date(s.updated)>new Date(t.updated)?-1:1)}static saveNote(e){const s=this.getAllNotes(),t=s.find(o=>o.id===e.id);t?(t.title=e.title,t.body=e.body,t.updated=new Date().toISOString()):(e.id=Math.floor(Math.random()*1e9),e.updated=new Date().toISOString(),s.push(e)),localStorage.setItem("notesapp-notes",JSON.stringify(s))}static deleteNote(e){const t=this.getAllNotes().filter(o=>o.id!=e);localStorage.setItem("notesapp-notes",JSON.stringify(t))}}class N{constructor(e){this.notes=[],this.selectedNote=null,this.view=new _(e,this._handlers()),this._refreshNotes()}_handlers(){return{onNoteSelect:e=>{const s=this.notes.find(t=>t.id==e);this._setActiveNote(s)},onNoteAdd:()=>{const e={title:"New note",body:"Take a note..."};l.saveNote(e),this._refreshNotes()},onNoteEdit:(e,s)=>{l.saveNote({id:this.selectedNote.id,title:e,body:s}),this._refreshNotes()},onNoteDelete:e=>{l.deleteNote(e),this._refreshNotes()}}}_refreshNotes(){const e=l.getAllNotes();this._setNotes(e),e.length>0&&this._setActiveNote(e[0])}_setNotes(e){this.notes=e,this.view.updateNoteList(e),this.view.updateNotePreviewVisibility(e.length>0)}_setActiveNote(e){this.selectedNote=e,this.view.updateSelectedNote(e)}}const f=document.getElementById("app");new N(f);
